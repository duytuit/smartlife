// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartBuilding.Data.EF;

namespace SmartBuilding.Data.Migrations
{
    [DbContext(typeof(SmartBuildingDbContext))]
    [Migration("20200520132101_update002")]
    partial class update002
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SmartBuilding.Data.Entities.Device", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("code_device")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("created_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("device_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hub_code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hub_password_client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hub_room_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("hubid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name_device")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("number_switch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("userid_by")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("hubid");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("SmartBuilding.Data.Entities.Hub", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("clientid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("code_hub")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("created_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password_client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("room_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("roomid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("userid_by")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("Hubs");
                });

            modelBuilder.Entity("SmartBuilding.Data.Entities.User_Hub", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("created_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hub_code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hub_password_client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("hubid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("userid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("userid_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("hubid");

                    b.ToTable("User_Hubs");
                });

            modelBuilder.Entity("SmartBuilding.Data.Entities.Device", b =>
                {
                    b.HasOne("SmartBuilding.Data.Entities.Hub", "Hub")
                        .WithMany("Device")
                        .HasForeignKey("hubid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartBuilding.Data.Entities.User_Hub", b =>
                {
                    b.HasOne("SmartBuilding.Data.Entities.Hub", "Hub")
                        .WithMany("User_Hub")
                        .HasForeignKey("hubid");
                });
#pragma warning restore 612, 618
        }
    }
}
